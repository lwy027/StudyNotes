// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}
generator docs {
  provider = "node ../../node_modules/prisma-docs-generator"
  output   = "../generated/docs"
}

generator json {
  provider = "prisma-json-schema-generator"
  output   = "../generated/json"
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model User {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
// }

model Department {
  id Int @id @default(autoincrement())

  name String @unique

  createTime DateTime @default(now())
  unpateTime DateTime @updatedAt

  employees Employee[]  

}
model Employee  {
id Int @id @default(autoincrement())
name String  @db.VarChar(20)
phone String  @db.VarChar(30)
departmentId Int
department Department @relation(fields: [departmentId],references: [id])
}


model Post {
  id Int @id @default(autoincrement())
  title     String
  content   String?
  published Boolean      @default(false)
  tags      TagOnPosts[]
}

model Tag {
  id    Int          @id @default(autoincrement())
  name  String
  posts TagOnPosts[]
}


model TagOnPosts {
  post   Post @relation(fields: [postId], references: [id])
  postId Int

  tag    Tag @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([postId, tagId])
}